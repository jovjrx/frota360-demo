const admin = require('firebase-admin');
const serviceAccount = require('../firebase-service-account.json');

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = admin.firestore();

async function checkFinancing() {
  console.log('üîç Buscando financiamentos ativos...\n');
  
  const snapshot = await db.collection('financing')
    .where('status', '==', 'active')
    .get();

  if (snapshot.empty) {
    console.log('‚ùå Nenhum financiamento ativo encontrado');
    return;
  }

  console.log(`‚úÖ Encontrados ${snapshot.size} financiamentos ativos:\n`);

  snapshot.forEach((doc) => {
    const data = doc.data();
    console.log(`üìÑ ID: ${doc.id}`);
    console.log(`üë§ Driver: ${data.driverId}`);
    console.log(`üìä Tipo: ${data.type} (${data.type === 'loan' ? 'Empr√©stimo' : 'Desconto'})`);
    console.log(`üí∞ Valor: ‚Ç¨${data.amount}`);
    console.log(`üìÖ Semanas: ${data.weeks || 'N/A (desconto vital√≠cio)'}`);
    console.log(`üìâ Restantes: ${data.remainingWeeks || 'N/A'}`);
    console.log(`üìà Juros: ${data.weeklyInterest || 0}%`);
    console.log(`üü¢ Status: ${data.status}`);
    console.log(`üìÜ In√≠cio: ${data.startDate}`);
    console.log('‚îÄ'.repeat(60));
  });
}

checkFinancing()
  .then(() => {
    console.log('\n‚úÖ An√°lise conclu√≠da');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå Erro:', error);
    process.exit(1);
  });
